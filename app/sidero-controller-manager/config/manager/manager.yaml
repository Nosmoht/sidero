apiVersion: v1
kind: Service
metadata:
  name: dhcp
  namespace: system
spec:
  ports:
    - port: 67
      targetPort: dhcp
      protocol: UDP
  selector:
    control-plane: sidero-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: tftp
  namespace: system
spec:
  ports:
    - port: 69
      targetPort: tftp
      protocol: UDP
  selector:
    control-plane: sidero-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: siderolink
  namespace: system
spec:
  ports:
    - port: ${SIDERO_CONTROLLER_MANAGER_SIDEROLINK_PORT:=51821}
      targetPort: siderolink
      protocol: UDP
  selector:
    control-plane: sidero-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: http
  namespace: system
spec:
  ports:
    - port: ${SIDERO_CONTROLLER_MANAGER_API_PORT:=8081}
      targetPort: http
      protocol: TCP
  selector:
    control-plane: sidero-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: sidero-controller-manager
spec:
  selector:
    matchLabels:
      control-plane: sidero-controller-manager
  replicas: 1
  strategy:
    type: ${SIDERO_CONTROLLER_MANAGER_DEPLOYMENT_STRATEGY:=RollingUpdate}
  template:
    metadata:
      labels:
        control-plane: sidero-controller-manager
    spec:
      hostNetwork: ${SIDERO_CONTROLLER_MANAGER_HOST_NETWORK:=false}
      containers:
        - command:
            - /manager
          args:
            - --enable-leader-election
            - "--diagnostics-address=${CAPI_DIAGNOSTICS_ADDRESS:=:8443}"
            - "--insecure-diagnostics=${CAPI_INSECURE_DIAGNOSTICS:=false}"
            - --api-endpoint=${SIDERO_CONTROLLER_MANAGER_API_ENDPOINT:=-}
            - --api-port=${SIDERO_CONTROLLER_MANAGER_API_PORT:=8081}
            - --http-port=${SIDERO_CONTROLLER_MANAGER_CONTAINER_API_PORT:=8081}
            - --extra-agent-kernel-args=${SIDERO_CONTROLLER_MANAGER_EXTRA_AGENT_KERNEL_ARGS:=-}
            - --boot-from-disk-method=${SIDERO_CONTROLLER_MANAGER_BOOT_FROM_DISK_METHOD:=ipxe-exit}
            - --auto-accept-servers=${SIDERO_CONTROLLER_MANAGER_AUTO_ACCEPT_SERVERS:=false}
            - --insecure-wipe=${SIDERO_CONTROLLER_MANAGER_INSECURE_WIPE:=true}
            - --auto-bmc-setup=${SIDERO_CONTROLLER_MANAGER_AUTO_BMC_SETUP:=true}
            - --server-reboot-timeout=${SIDERO_CONTROLLER_MANAGER_SERVER_REBOOT_TIMEOUT:=20m}
            - --ipmi-pxe-method=${SIDERO_CONTROLLER_MANAGER_IPMI_PXE_METHOD:=uefi}
            - --disable-dhcp-proxy=${SIDERO_CONTROLLER_MANAGER_DISABLE_DHCP_PROXY:=false}
            - --test-power-simulated-explicit-failure-prob=${SIDERO_CONTROLLER_MANAGER_TEST_POWER_EXPLICIT_FAILURE:=0}
            - --test-power-simulated-silent-failure-prob=${SIDERO_CONTROLLER_MANAGER_TEST_POWER_SILENT_FAILURE:=0}
          image: controller:latest
          imagePullPolicy: Always
          name: manager
          ports:
            - name: dhcp
              containerPort: 67
              protocol: UDP
            - name: tftp
              containerPort: 69
              protocol: UDP
            - name: http
              containerPort: ${SIDERO_CONTROLLER_MANAGER_CONTAINER_API_PORT:=8081}
              protocol: TCP
            - containerPort: 9440
              name: healthz
              protocol: TCP
            - containerPort: 8443
              name: metrics
              protocol: TCP
          env:
            - name: API_ENDPOINT
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          terminationMessagePolicy: FallbackToLogsOnError
        - command:
            - /siderolink-manager
          args:
            - --wireguard-endpoint=${SIDERO_CONTROLLER_MANAGER_SIDEROLINK_ENDPOINT:=-}
            - --wireguard-port=${SIDERO_CONTROLLER_MANAGER_SIDEROLINK_PORT:=51821}
          image: controller:latest
          imagePullPolicy: Always
          name: siderolink
          env:
            - name: API_ENDPOINT
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          ports:
            - name: siderolink
              containerPort: ${SIDERO_CONTROLLER_MANAGER_SIDEROLINK_PORT:=51821}
              protocol: UDP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_ADMIN
          volumeMounts:
            - mountPath: /dev/net/tun
              name: dev-tun
          terminationMessagePolicy: FallbackToLogsOnError
        - command:
            - /log-receiver
          image: controller:latest
          imagePullPolicy: Always
          name: serverlogs
          resources:
            limits:
              cpu: 256m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsUser: 65532
            runAsGroup: 65532
          terminationMessagePolicy: FallbackToLogsOnError
        - command:
            - /events-manager
            - --negative-address-filter=${SIDERO_CONTROLLER_MANAGER_EVENTS_NEGATIVE_ADDRESS_FILTER:=-}
          image: controller:latest
          imagePullPolicy: Always
          name: serverevents
          resources:
            limits:
              cpu: 256m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsUser: 65532
            runAsGroup: 65532
          terminationMessagePolicy: FallbackToLogsOnError
      volumes:
        - hostPath:
            path: /dev/net/tun
            type: CharDevice
          name: dev-tun
      terminationGracePeriodSeconds: 10
